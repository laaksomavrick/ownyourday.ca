name: CI

on:
  pull_request:
    branches: [ main ]

# TODO: clean up env variables
jobs:
  verify:
    name: Verify pull request
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: rails_github_actions
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1

      - name: Cache nix binaries
        id: cache-nix
        uses: actions/cache@v3
        env:
          cache-name: cache-nix-store
        with:
          path: /nix/store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/shell.nix') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-nix-store.outputs.cache-hit != 'true' }}
        name: List the state of the nix store
        continue-on-error: true
        run: ls -l /nix/store

      # TODO: cache Ruby deps
      # TODO: cache Js deps

      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install nix binaries
        run: nix-shell

      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install ruby dependencies
        env:
          RAILS_ENV: test
        run: nix-shell --run 'bundler'

      - name: Install javascript dependencies
        run: |
          nix-shell --run 'pnpm install --recursive --frozen-lockfile --strict-peer-dependencies'

      - name: Setup assets
        run: nix-shell --run 'bundler exec rails assets:clean assets:precompile'

      - name: Check ruby formatting
        run: nix-shell --run 'bundler exec rubocop --fail-level=warning'

      - name: Check js formatting
        run: nix-shell --run 'pnpm run format:check'

      - name: Check js lint
        run: nix-shell --run 'pnpm run lint'

      - name: Run js tests
        run: nix-shell --run 'pnpm run test'

      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_USER: rails_github_actions
          POSTGRES_PASSWORD: postgres
        run: |
          cp config/database.ci.yml config/database.yml
          nix-shell --run 'rake db:create db:schema:load'

      - name: Run ruby tests
        env:
          IS_CI: true
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_USER: rails_github_actions
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: nix-shell --run 'rspec'
